bridge = {
  replica = {
    # the unique number that identifies this replica
    replicaId = 0
    clientId = 1
    requests = {
      # the host where we are listening for requests
      host = "[::]"
      # the port where we are listening for requests
      port = 4000
    } 
    responses = {
      # the host where we are listening for responses
      host = "[::]"
      # the port where we are listening for responses
      port = 6001
    }
    internalRequests = {
      host = "[::]"
      port = 30000
    }
    internalResponses = {
      host = "[::]"
      port = 32001
    }
    # security configuration
    security = {
      # path to the public key file
      publicKeyFile = "consensusPublicKey.pem"
      # path to the private key file
      privateKeyFile = "consensusPrivateKey.pem"
      # path to shared private pegin wallet seed file
      peginWalletFile = "pegin-wallet0.json"
      # path to shared ext pub key files of other replicas 
      sharedPubKeyFiles = {
        0 = "shared-pubkey0.txt"
        1 = "shared-pubkey1.txt"
        2 = "shared-pubkey2.txt"
        3 = "shared-pubkey3.txt"
        4 = "shared-pubkey4.txt"
        5 = "shared-pubkey5.txt"
        6 = "shared-pubkey6.txt"
      }
    }
    consensus = {
      replicaCount = 1
      # map mapping each replica to its corresponding backend
      replicas = {
        0 = {
          host = "localhost"
          port = 4000
          secure = "false"
          publicKeyFile = "consensusPublicKey.pem"
          internalHost = "localhost"
          internalPort = 30000
        }
      }
    }
    clients = {
      clientCount = 2
      # map mapping each client to its corresponding client
      clients = {
        0 = {
          publicKeyFile = "clientPublicKey.pem"
          host = "localhost"
          port = 6000
          secure = "false"
        }
        1 = {
          publicKeyFile = "consensusPublicKey.pem"
          host = "localhost"
          port = 6001
          secure = "false"
        }
      }
      monitor = { 
        client = {
          # in seconds
          primaryResponseWait = 10 
          # in seconds
          otherReplicasResponseWait = 10 
          # in seconds

          retryPolicy =  {
            # in seconds
            initialDelay = 1
            maxRetries = 1
            delayMultiplier = 2
          }
        }
      }
      pbftInternal = {
        retryPolicy = {
          # in seconds
          initialDelay = 1 
          # in seconds
          maxRetries = 1
          delayMultiplier = 2
        }
      }
      mintingPolicy = {
        validate = "true"
        maxRetries = 5
      }
    }
  }
}